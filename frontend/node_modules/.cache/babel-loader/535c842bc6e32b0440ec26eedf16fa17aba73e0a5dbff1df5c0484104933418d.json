{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshjha/Developer/SwiftBill/frontend/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createWorker } from 'tesseract.js';\nimport Papa from 'papaparse';\nimport { addInvoice } from '../store/slices/invoiceSlice';\nimport { updateProductQuantity } from '../store/slices/productSlice';\nimport { updateCustomerPurchaseAmount } from '../store/slices/customerSlice';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const processImageOrPdf = async file => {\n    try {\n      const worker = await createWorker({\n        logger: m => {\n          if (m.status === 'recognizing text') {\n            setProgress(parseInt(m.progress * 100));\n          }\n        }\n      });\n      await worker.loadLanguage('eng');\n      await worker.initialize('eng');\n      const {\n        data: {\n          text\n        }\n      } = await worker.recognize(file);\n      await worker.terminate();\n\n      // Extract data using regex patterns\n      const extractedData = extractDataFromText(text);\n      if (extractedData) {\n        dispatch(addInvoice(extractedData));\n        updateRelatedData(extractedData);\n      }\n    } catch (err) {\n      setError('Error processing image/PDF: ' + err.message);\n    }\n  };\n  const processCsvOrExcel = file => {\n    Papa.parse(file, {\n      complete: results => {\n        const {\n          data\n        } = results;\n        // Assuming first row is headers\n        const headers = data[0];\n        const rows = data.slice(1);\n        rows.forEach(row => {\n          const invoiceData = mapRowToInvoiceData(headers, row);\n          if (invoiceData) {\n            dispatch(addInvoice(invoiceData));\n            updateRelatedData(invoiceData);\n          }\n        });\n      },\n      error: err => {\n        setError('Error processing CSV/Excel: ' + err.message);\n      }\n    });\n  };\n  const extractDataFromText = text => {\n    try {\n      var _text$match, _text$match2, _text$match3, _text$match4, _text$match5, _text$match6;\n      // Basic regex patterns - adjust based on your invoice format\n      const serialNumber = (_text$match = text.match(/Invoice #:\\s*(\\w+)/i)) === null || _text$match === void 0 ? void 0 : _text$match[1];\n      const customerName = (_text$match2 = text.match(/Bill To:\\s*([^\\n]+)/i)) === null || _text$match2 === void 0 ? void 0 : _text$match2[1];\n      const productName = (_text$match3 = text.match(/Item:\\s*([^\\n]+)/i)) === null || _text$match3 === void 0 ? void 0 : _text$match3[1];\n      const quantity = parseInt((_text$match4 = text.match(/Quantity:\\s*(\\d+)/i)) === null || _text$match4 === void 0 ? void 0 : _text$match4[1]);\n      const tax = parseFloat((_text$match5 = text.match(/Tax:\\s*\\$?(\\d+\\.?\\d*)/i)) === null || _text$match5 === void 0 ? void 0 : _text$match5[1]);\n      const totalAmount = parseFloat((_text$match6 = text.match(/Total:\\s*\\$?(\\d+\\.?\\d*)/i)) === null || _text$match6 === void 0 ? void 0 : _text$match6[1]);\n      if (!serialNumber || !customerName || !productName || !quantity || !tax || !totalAmount) {\n        throw new Error('Missing required fields');\n      }\n      return {\n        serialNumber,\n        customerName,\n        productName,\n        quantity,\n        tax,\n        totalAmount,\n        date: new Date()\n      };\n    } catch (err) {\n      setError('Error extracting data: ' + err.message);\n      return null;\n    }\n  };\n  const mapRowToInvoiceData = (headers, row) => {\n    try {\n      const getValueByHeader = header => {\n        const index = headers.findIndex(h => h.toLowerCase().includes(header.toLowerCase()));\n        return row[index];\n      };\n      return {\n        serialNumber: getValueByHeader('serial'),\n        customerName: getValueByHeader('customer'),\n        productName: getValueByHeader('product'),\n        quantity: parseInt(getValueByHeader('quantity')),\n        tax: parseFloat(getValueByHeader('tax')),\n        totalAmount: parseFloat(getValueByHeader('total')),\n        date: new Date()\n      };\n    } catch (err) {\n      setError('Error mapping row data: ' + err.message);\n      return null;\n    }\n  };\n  const updateRelatedData = invoiceData => {\n    // Update product quantity\n    dispatch(updateProductQuantity({\n      productName: invoiceData.productName,\n      quantity: invoiceData.quantity\n    }));\n\n    // Update customer purchase amount\n    dispatch(updateCustomerPurchaseAmount({\n      customerName: invoiceData.customerName,\n      amount: invoiceData.totalAmount\n    }));\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) {\n      console.log('No file selected');\n      return;\n    }\n    console.log('Selected file:', {\n      name: file.name,\n      type: file.type,\n      size: file.size\n    });\n    setIsProcessing(true);\n    setError(null);\n    setProgress(0);\n    try {\n      const formData = new FormData();\n      formData.append('document', file);\n      console.log('Sending file to server:', process.env.REACT_APP_API_URL);\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/documents/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          console.log('Upload progress:', percentCompleted + '%');\n          setProgress(percentCompleted);\n        }\n      });\n      console.log('Server response:', response.data);\n\n      // Update Redux store with the processed data\n      if (response.data.data) {\n        dispatch(addInvoice(response.data.data));\n        console.log('Invoice added to store');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      console.error('Upload error:', error);\n      console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.details) || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'File upload failed');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-xl mx-auto bg-white p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center justify-center pt-5 pb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-10 h-10 mb-3 text-gray-400\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2 text-sm text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Click to upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), \" or drag and drop\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: \"PDF, Excel, CSV, or Image files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            accept: \".pdf,.csv,.xlsx,.xls,image/*\",\n            onChange: handleFileUpload,\n            disabled: isProcessing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-gray-200 rounded-full h-2.5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 h-2.5 rounded-full\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-sm text-gray-600 mt-2\",\n          children: [\"Processing file... \", progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-red-50 text-red-600 rounded-lg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"EZNFF6H0KqM5SMntGtl2RpbnspE=\", false, function () {\n  return [useDispatch];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useDispatch","createWorker","Papa","addInvoice","updateProductQuantity","updateCustomerPurchaseAmount","axios","jsxDEV","_jsxDEV","FileUpload","_s","dispatch","isProcessing","setIsProcessing","error","setError","progress","setProgress","processImageOrPdf","file","worker","logger","m","status","parseInt","loadLanguage","initialize","data","text","recognize","terminate","extractedData","extractDataFromText","updateRelatedData","err","message","processCsvOrExcel","parse","complete","results","headers","rows","slice","forEach","row","invoiceData","mapRowToInvoiceData","_text$match","_text$match2","_text$match3","_text$match4","_text$match5","_text$match6","serialNumber","match","customerName","productName","quantity","tax","parseFloat","totalAmount","Error","date","Date","getValueByHeader","header","index","findIndex","h","toLowerCase","includes","amount","handleFileUpload","event","target","files","console","log","name","type","size","formData","FormData","append","process","env","REACT_APP_API_URL","response","post","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","details","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","style","width","_c","$RefreshReg$"],"sources":["/Users/divyanshjha/Developer/SwiftBill/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createWorker } from 'tesseract.js';\nimport Papa from 'papaparse';\nimport { addInvoice } from '../store/slices/invoiceSlice';\nimport { updateProductQuantity } from '../store/slices/productSlice';\nimport { updateCustomerPurchaseAmount } from '../store/slices/customerSlice';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const dispatch = useDispatch();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const processImageOrPdf = async (file) => {\n    try {\n      const worker = await createWorker({\n        logger: m => {\n          if (m.status === 'recognizing text') {\n            setProgress(parseInt(m.progress * 100));\n          }\n        },\n      });\n\n      await worker.loadLanguage('eng');\n      await worker.initialize('eng');\n      const { data: { text } } = await worker.recognize(file);\n      await worker.terminate();\n\n      // Extract data using regex patterns\n      const extractedData = extractDataFromText(text);\n      if (extractedData) {\n        dispatch(addInvoice(extractedData));\n        updateRelatedData(extractedData);\n      }\n    } catch (err) {\n      setError('Error processing image/PDF: ' + err.message);\n    }\n  };\n\n  const processCsvOrExcel = (file) => {\n    Papa.parse(file, {\n      complete: (results) => {\n        const { data } = results;\n        // Assuming first row is headers\n        const headers = data[0];\n        const rows = data.slice(1);\n\n        rows.forEach(row => {\n          const invoiceData = mapRowToInvoiceData(headers, row);\n          if (invoiceData) {\n            dispatch(addInvoice(invoiceData));\n            updateRelatedData(invoiceData);\n          }\n        });\n      },\n      error: (err) => {\n        setError('Error processing CSV/Excel: ' + err.message);\n      }\n    });\n  };\n\n  const extractDataFromText = (text) => {\n    try {\n      // Basic regex patterns - adjust based on your invoice format\n      const serialNumber = text.match(/Invoice #:\\s*(\\w+)/i)?.[1];\n      const customerName = text.match(/Bill To:\\s*([^\\n]+)/i)?.[1];\n      const productName = text.match(/Item:\\s*([^\\n]+)/i)?.[1];\n      const quantity = parseInt(text.match(/Quantity:\\s*(\\d+)/i)?.[1]);\n      const tax = parseFloat(text.match(/Tax:\\s*\\$?(\\d+\\.?\\d*)/i)?.[1]);\n      const totalAmount = parseFloat(text.match(/Total:\\s*\\$?(\\d+\\.?\\d*)/i)?.[1]);\n\n      if (!serialNumber || !customerName || !productName || !quantity || !tax || !totalAmount) {\n        throw new Error('Missing required fields');\n      }\n\n      return {\n        serialNumber,\n        customerName,\n        productName,\n        quantity,\n        tax,\n        totalAmount,\n        date: new Date()\n      };\n    } catch (err) {\n      setError('Error extracting data: ' + err.message);\n      return null;\n    }\n  };\n\n  const mapRowToInvoiceData = (headers, row) => {\n    try {\n      const getValueByHeader = (header) => {\n        const index = headers.findIndex(h => \n          h.toLowerCase().includes(header.toLowerCase())\n        );\n        return row[index];\n      };\n\n      return {\n        serialNumber: getValueByHeader('serial'),\n        customerName: getValueByHeader('customer'),\n        productName: getValueByHeader('product'),\n        quantity: parseInt(getValueByHeader('quantity')),\n        tax: parseFloat(getValueByHeader('tax')),\n        totalAmount: parseFloat(getValueByHeader('total')),\n        date: new Date()\n      };\n    } catch (err) {\n      setError('Error mapping row data: ' + err.message);\n      return null;\n    }\n  };\n\n  const updateRelatedData = (invoiceData) => {\n    // Update product quantity\n    dispatch(updateProductQuantity({\n      productName: invoiceData.productName,\n      quantity: invoiceData.quantity\n    }));\n\n    // Update customer purchase amount\n    dispatch(updateCustomerPurchaseAmount({\n      customerName: invoiceData.customerName,\n      amount: invoiceData.totalAmount\n    }));\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n        console.log('No file selected');\n        return;\n    }\n\n    console.log('Selected file:', {\n        name: file.name,\n        type: file.type,\n        size: file.size\n    });\n\n    setIsProcessing(true);\n    setError(null);\n    setProgress(0);\n\n    try {\n        const formData = new FormData();\n        formData.append('document', file);\n\n        console.log('Sending file to server:', process.env.REACT_APP_API_URL);\n        \n        const response = await axios.post(\n            `${process.env.REACT_APP_API_URL}/documents/upload`,\n            formData,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: (progressEvent) => {\n                    const percentCompleted = Math.round(\n                        (progressEvent.loaded * 100) / progressEvent.total\n                    );\n                    console.log('Upload progress:', percentCompleted + '%');\n                    setProgress(percentCompleted);\n                }\n            }\n        );\n\n        console.log('Server response:', response.data);\n        \n        // Update Redux store with the processed data\n        if (response.data.data) {\n            dispatch(addInvoice(response.data.data));\n            console.log('Invoice added to store');\n        }\n    } catch (error) {\n        console.error('Upload error:', error);\n        console.error('Error response:', error.response?.data);\n        setError(\n            error.response?.data?.details || \n            error.response?.data?.message || \n            error.message || \n            'File upload failed'\n        );\n    } finally {\n        setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"mb-8\">\n      <div className=\"max-w-xl mx-auto bg-white p-6 rounded-lg shadow\">\n        <div className=\"flex items-center justify-center w-full\">\n          <label className=\"flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\">\n            <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n              <svg className=\"w-10 h-10 mb-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n              </svg>\n              <p className=\"mb-2 text-sm text-gray-500\">\n                <span className=\"font-semibold\">Click to upload</span> or drag and drop\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                PDF, Excel, CSV, or Image files\n              </p>\n            </div>\n            <input\n              type=\"file\"\n              className=\"hidden\"\n              accept=\".pdf,.csv,.xlsx,.xls,image/*\"\n              onChange={handleFileUpload}\n              disabled={isProcessing}\n            />\n          </label>\n        </div>\n\n        {isProcessing && (\n          <div className=\"mt-4\">\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n              <div\n                className=\"bg-blue-600 h-2.5 rounded-full\"\n                style={{ width: `${progress}%` }}\n              ></div>\n            </div>\n            <p className=\"text-center text-sm text-gray-600 mt-2\">\n              Processing file... {progress}%\n            </p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 text-red-600 rounded-lg\">\n            {error}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}